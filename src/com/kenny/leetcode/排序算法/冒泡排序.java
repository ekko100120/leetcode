package com.kenny.leetcode.排序算法;

public class 冒泡排序 {


    /*原理：
    在要排序的一组数中，对当前还未排好序的范围内的全部数，自上而下对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。

    步骤如下：
            1、从第一个数据开始，与第二个数据相比较，如果第二个数据小于第一个数据，则交换两个数据的位置。
            2、指针由第一个数据移向第二个数据，第二个数据与第三个数据相比较，如果第三个数据小于第二个数据，则交换两个数据的位置。
            3、依此类推，完成第一轮排序。第一轮排序结束后，最大的元素被移到了最右面。
            4、依照上面的过程进行第二轮排序，将第二大的排在倒数第二的位置。
            5、重复上述过程，没排完一轮，比较次数就减少一次。*/


    //两两相邻的两个数相互比较.一轮过后最大的数已经被排在了最后一个，接下来按同样的方法拍剩下的前n个数
    public static void bubbleSort(int[] arr) {
        if (arr ==null){
            return;
        }
        int length = arr.length;
        for (int i = 0; i <length-1 ; i++) {
            for (int j =0 ; j <length-1-i ; j++) {
                if (arr[j]>arr[j+1]){
                    int tmp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] =tmp;
                }
            }
        }

    }
}
